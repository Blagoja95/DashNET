version: '3'

services:

  spring-be:
    container_name: dashNet-spring
    platform: linux
    profiles:
      - 'no-admin'
      - 'spring-mysql'
      - 'spring-mysql-admin'
      - 'default'
    build:
      context: .
      dockerfile: Spring.Dockerfile
    restart: on-failure
    deploy:
      mode: replicated
      replicas: ${SPRING_REPLICAS}
    ports:
      - ${SPRING_PORT}:8080
    volumes:
      - .:/app
    networks:
      - dash-net
    depends_on:
      - mysql-db
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DB_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DB_PASSWORD}

  nodejs-fe:
    container_name: dashNet-react-fe
    profiles:
      - 'react'
      - 'no-admin'
      - 'default'
    build:
      context: .
      dockerfile: React.Dockerfile
    image: dashnet-react-image
    networks:
      - dash-net
    ports:
      - ${NODE_PORT}:3000
    restart: always
    deploy:
      mode: replicated
      replicas: ${NODE_REPLICAS}
    volumes:
      - ./src/main/ui/:/usr/src/app/

  mysql-db:
    build:
      context: .
      dockerfile: src/main/db/MySql.Dockerfile
    container_name: dashNet-mysql
    profiles:
      - 'mysql'
      - 'no-admin'
      - 'spring-mysql'
      - 'mysql-admin'
      - 'spring-mysql-admin'
      - 'default'
    image: dashnet-mysql-image
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    deploy:
      mode: replicated
      replicas: ${MYSQL_REPLICAS}
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
    volumes:
      - "dashnet-mysql:/var/lib/mysql"
    networks:
      - dash-net

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: php_my_admin
    profiles:
      - 'phpadmin'
      - 'mysql-admin'
      - 'spring-mysql-admin'
      - 'default'
    links:
      - mysql-db
    environment:
      PMA_HOST: ${PMA_HOST}
      PMA_PORT: ${MYSQL_PORT}
      PMA_ARBITRARY: ${PMA_ARBITRARY}
    restart: always
    deploy:
      mode: replicated
      replicas: ${PMA_REPLICAS}
    ports:
      - ${PMA_PORT}:80
    networks:
      - dash-net

networks:
  dash-net: { }

volumes:
  dashnet-mysql: